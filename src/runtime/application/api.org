#+TITLE: The Application API
#+AUTHOR: VLEAD
#+DATE: [2017-02-23 Wed]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil


* Introduction 
  This document illustrates building of the APPLICATION API.

  
* APPLICATION
    
*** Get the string between two specified block ends
   - This function will give the string between the two indexes passed into
     this function,to get the string between two points

#+NAME: get_the_string
#+BEGIN_SRC python

def get_the_string(str2, pos1, pos2):
    str2_len = len(str2)
    middle_str = contents[ (pos1 + str2_len) :pos2]
    first_brace = middle_str.find("\"")
    second_brace = middle_str.find("\"", (first_brace + 1) )
    return middle_str[ (first_brace + 1) : second_brace]
            
#+END_SRC

*** Save the Lab File
    - This function will take the input from the user and will save the lab
     specification file in desired folder specified.
 #+NAME: saveLab
 #+BEGIN_SRC python

def saveLab(L_fileName, dest_path): 
    text = "{\"lab\": {\"id\":  \"%s\",\n\
     \"name\": \"%s\",\n\
     \"overview\": \"This lab deals with %s\",\n\
     \"sections\" : [{\"name\": \"%sduction\"},\n\
               {\"experiments\": [%s]}]\n\
    }\n}" %( ID1.lower(),  d_name, d_name, Final_list[0], my_str.lower())

    file_path = dest_path + '/' + L_fileName.lower()
    with open(file_path, "w") as f:
        f.writelines(text)

#+END_SRC

*** Save the experiment File
    - This function will take the input from the user and will save the
      experiment specification file in desired folder specified.
 #+NAME: saveExp
 #+BEGIN_SRC python

def saveExp(file_name, Ex_name, sec_str, dest_path): 
    text = "{\"experiment\": {\"id\":  \"%s\",\n\
        \"name\": \"%s\",\n\
        \"overview\": \"This experiments deals with %s\",\n\
        \"sections\" : [\"%s\"]\
        \n\t\t}\n}" %( file_name.lower(),  Ex_name, Ex_name, sec_str)
    file_path = dest_path + '/' + "%s.json" %file_name
    with open(file_path, "w") as f:
        f.writelines(text)

 #+END_SRC

*** Main
   - This main function includes script for converting the
     existing json files into new lab and exp specs.
   - The script requires two inputs:
     + Existing json files as per the old format.
     + A new empty folder, where we need to save the converted files.

#+NAME: Main-python
#+BEGIN_SRC python

print ("\n\nWelcome to Specification Creator\n")

directory_old = raw_input("Enter old Path : ")
directory_new = raw_input("Enter New Path : ")

doc_type = raw_input("Do you want Experiment Spec also ?\nType \"Y\" or \"N\" !!!\n")

print ("Please Wait...\n")
print ("Processing...........\n")

path = r"%s" %directory_old

path_list = path.split(os.sep)
calc_len = len(path_list)
Old_Folder = path_list[calc_len - 1]

for file in os.listdir(path):
    current_file = os.path.join(path, file)
    myFile = open(current_file, "r")
    
    if file.endswith(".json"):
        new_path = directory_new + "/%s" %Old_Folder.lower() + "/%s" % file[0 : len(file) - 5].lower()
        os.makedirs(new_path)

    contents = myFile.read()
    index = 0
    listIdPos = []
    Final_list = []
    def_str = "\"id\":"
    my_str = ""

    def_str_exp = "\"name\":"

    # Details for LAB file
    #if doc_type == "Lab":
    while index < len(contents):
        index = contents.find(def_str, index)
        if index == -1:
            break
        listIdPos.append(index)
        index += 5

    listIdPos.append(len(contents))

    id_count = len(listIdPos)
    pos_dname = contents.find("\"display_name\":")

    ID1 = get_the_string(def_str, listIdPos[0], pos_dname)
    d_name = get_the_string("\"display_name\":", pos_dname, listIdPos[1])

    for i in range(1, (id_count-1) ):
        Final_list.append(get_the_string(def_str, listIdPos[i], listIdPos[i+1]))
        
    final_len = len(Final_list)
    for j in range(1, final_len):
        my_str += Final_list[j]
        if j < final_len - 1:
            my_str += ", " 

    saveLab(file, new_path)

    Final_list.pop(0)

    # Details for Experiment File
    if doc_type == "Y":
        All_ID_location = []
        name_pos = []
        sub_sections = []
        index = 0
        Exp_str = ""
        for i in range ( 0, len(Final_list)):
            index = contents.find(Final_list[i])
            All_ID_location.append(index)

        All_ID_location.append(len(contents))
        

        for i in range ( 0, len(All_ID_location)-1 ):
            mid_str = contents[All_ID_location[i] : All_ID_location[i+1]]
            index = 0
            del name_pos[:]
            while index < len(mid_str):
                index = mid_str.find(def_str_exp, index)
                if index == -1:
                    break
                name_pos.append(index)
                index += 6
            name_pos.append(len(mid_str))   
            for j in range (0, len(name_pos)-1 ):
                first_brace = mid_str.find("\"", (name_pos[j]+6) )
                second_brace = mid_str.find("\"", (first_brace + 1) )
                sub_sections.append(mid_str[ (first_brace + 1) : second_brace])

            Ex_final_len = len(sub_sections)
            for k in range(1, Ex_final_len ):
                Exp_str += sub_sections[k]
                if k < Ex_final_len - 1:
                    Exp_str += "\", \n \t\t\t      \""  
            saveExp(Final_list[i].lower(), sub_sections[0], Exp_str, new_path)
            
            Exp_str = ""
            del sub_sections[:]     

print ("Processing Complete, Please Check at your Save Location")
print ("Thank You, Visit Us again :) ...")
    
#+END_SRC
   
  

* Tangle                                                        :boilerplate:

** sources
#+BEGIN_SRC python :tangle api.py :eval no :noweb yes
<<get_the_string>>
<<saveLab>>
<<saveExp>>
<<Main-python>>

#+END_SRC
